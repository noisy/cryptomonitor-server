var stringify = require("querystring").stringify,
    hmac = require("crypto").createHmac,
    request = require("request");

function CoinedUp(key, secret) {
	this.key = key;
	this.secret = secret;

	this._apiQuery = function(method, args, callback) {
		var uri = "https://api.coinedup.com/" + method;

		args.requestKey = (new Date().getTime()).toString(10);

		var message = stringify(args);

		var sign = hmac("sha512", this.secret);
		sign.update(message);

    	var options = {
    		uri: uri,
      		agent: false,
      		method: 'POST',
      		headers: {
        		"User-Agent": "Mozilla/4.0 (compatible; CoinedUp API node client)",
        		"Content-type": "application/x-www-form-urlencoded",
      			"Sign": sign.digest('hex'),
        		"Key": this.key
      		},
      		"rejectUnauthorized": false,
      		method : 'POST',
      		body: message
		};

		request(options, function(err, res, body) {
			try {
    			var response = JSON.parse(body);
    			if(typeof callback == typeof Function)
    				callback(response.value);
    		} catch(e) {
    			console.log(e);
    		}
    	});
	}

	this.markets = function(callback) {
		this._apiQuery('markets', {}, callback);
	}

	this.orders = function(market, callback) {
		this._apiQuery('orders', { market: market }, callback);
	}

	this.marketDepth = function(market, callback) {
		var depth = {
			buy: {},
			sell: {},
		};
		this.orders(market, function(orders) {
			orders.forEach(function(order) {
				var rate = parseFloat(order.rate).toFixed(8);
				var volume = parseFloat(order.volume);

				if(order.type == "sell") {
					if (depth.sell[rate])
						depth.sell[rate].volume += volume;
					else {
						depth.sell[rate] = {
							rate: rate,
							volume: volume
						};
					}
				}
				else {
					if (depth.buy[rate])
						depth.buy[rate].volume += volume;
					else {
						depth.buy[rate] = {
							rate: rate,
							volume: volume
						};
					}
				}
			});

			var temp = [];
			Object.keys(depth.sell)
	      		.sort()
	      		.forEach(function (k) {
	      			temp.push(depth.sell[k]);
	      		});
	      	depth.sell = temp;

			var temp = [];
			Object.keys(depth.buy)
	      		.sort()
	      		.forEach(function (k) {
	      			temp.push(depth.buy[k]);
	      		});
	      	depth.buy = temp;

			callback(depth);
		});
	}

	this.trades = function(args, callback) {
		this._apiQuery('trades', args, callback);
	}
}

module.exports = CoinedUp;